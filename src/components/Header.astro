---
const navItems = [
  { label: 'Blog', href: '/blog' },
  { label: 'About', href: '/about' },
  { label: 'Contact', href: '/contact' },
];
---

<!-- border-gray-300 border-b  dark:border-gray-600 --><!-- bg-gray-50 dark:bg-gray-900/40 --><!-- <div class="bg-white dark:bg-gray-800 w-[300px] p-10 fixed top-0 right-0 bottom-0 border-l border-gray-300 dark:border-gray-600">
    this is the sidebar
</div> -->
<header class="h-10 mb-4 border-gray-300 border-b dark:border-gray-600 relative z-20">
  <div class="h-full container flex justify-between items-center">
    <a class="font-semibold opacity-70 hover:opacity-100" href="/">dhrjarun</a>

    <ul class="text-sm flex space-x-4">
      {
        navItems.map((item) => (
          <li class="hidden sm:block">
            <a
              class="no-underline hover:underline text-slate-500 dark:text-slate-400"
              href={item.href}
            >
              {item.label}
            </a>
          </li>
        ))
      }
      <li class="sm:hidden block">
        <button
          data-hamburger-button
          data-is-selected="false"
          class="p-1.5 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-sm data-[is-selected=true]:bg-gray-200 dark:data-[is-selected=true]:dark:bg-gray-700"
        >
          <svg
            width="15"
            height="15"
            viewBox="0 0 15 15"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              d="M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z"
              fill="currentColor"
              fill-rule="evenodd"
              clip-rule="evenodd"></path></svg
          >
        </button>
      </li>
    </ul>
  </div>
</header>

<div
  data-nav-extender
  data-is-open="false"
  class="z-10 sm:hidden shadow-lg absolute top-10 left-0 right-0 px-4 py-2 border-gray-300 border-b dark:border-gray-600 bg-white dark:bg-slate-800"
>
  <ul class="text-sm space-y-2 py-2">
    {
      navItems.map((item) => (
        <li class="mx-auto">
          <a class="no-underline hover:underline text-center" href={item.href}>
            {item.label}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<script>
  const button = document.querySelector('[data-hamburger-button]');
  const navExtender = document.querySelector('[data-nav-extender]');

  if (button) {
    button?.addEventListener('click', (event) => {
      const isOpen = navExtender?.getAttribute('data-is-open');
      const isSelected = button?.getAttribute('data-is-selected');

      if (isOpen != isSelected) return;

      navExtender?.setAttribute('data-is-open', `${isOpen == 'true' ? 'false' : 'true'}`);
      button?.setAttribute('data-is-selected', `${isSelected == 'true' ? 'false' : 'true'}`);
    });
  }
</script>
<style>
  /* https://greywyvern.com/337 */
  [data-nav-extender] {
    visibility: hidden;
    opacity: 0;
    transition:
      visibility 0s linear 0.1s,
      opacity 0.1s ease-in-out,
      transform 0.1s ease-in-out;
    @apply -translate-y-5;
  }

  [data-nav-extender][data-is-open='true'] {
    visibility: visible;
    opacity: 1;
    @apply translate-y-0 delay-0;
  }
</style>
