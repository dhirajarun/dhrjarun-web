---
import type { TocItem } from "./generate-toc";

interface Props {
  toc: TocItem[];
  depth?: number;
}

const { toc, depth = 0 } = Astro.props;
---

<ul class="toc-list">
  {
    toc.map((heading) => (
      <li class="toc-item">
        <a class="toc-link" href={"#" + heading.slug}>
          <span>{heading.text}</span>
        </a>
        {heading.children.length > 0 && (
          <Astro.self toc={heading.children} depth={depth + 1} />
        )}
      </li>
    ))
  }
</ul>

<style define:vars={{ depth }}>
  .toc-list {
    margin: 0;
    padding-inline: 0;
    list-style: none;
    font-size: 0.9rem;
  }

  .toc-item {
    padding-block: 0;
  }

  .toc-link {
    --pad-inline: 0.5rem;
    padding-inline: calc(1rem * var(--depth) + var(--pad-inline))
      var(--pad-inline);
    text-decoration: none;
  }
</style>
